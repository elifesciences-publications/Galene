diff -r 6a9599d65fa2 CMakeLists.txt
--- a/CMakeLists.txt	Tue Jun 05 09:58:53 2018 +1000
+++ b/CMakeLists.txt	Thu Jun 07 13:51:07 2018 +1000
@@ -67,6 +67,11 @@
     cmake_policy(SET CMP0060 NEW)
 endif()
 
+# Make IMPORTED_LINK_INTERFACE_LIBRARIES per configuration when exported
+if(POLICY CMP0022)
+   cmake_policy(SET CMP0022 OLD)
+endif()
+
 
 #---------------------------------------------------------------------
 # Set project information
@@ -414,12 +419,12 @@
 
     # Install library and headers
     export(TARGETS ${NAME} FILE cmake/${NAME}Config.cmake)
-    export(PACKAGE ${NAME})
-    install(TARGETS ${NAME} DESTINATION lib)
+    install(TARGETS ${NAME} EXPORT bioimageTargets DESTINATION lib)
     install(FILES ${INSTALLHEADERS} DESTINATION include)
 endmacro()
 
 
+
 #---------------------------------------------------------------------
 # libbioimage
 #---------------------------------------------------------------------
@@ -444,11 +449,13 @@
 
     # optional defines:
     if(BIC_ENABLE_QT)
+        set(BIM_USE_QT TRUE)
         add_definitions(-DBIM_USE_QT)
     endif()
 
     if(BIC_ENABLE_OPENCV)
         find_package(OpenCV REQUIRED)
+        set (BIM_USE_OPENCV TRUE)
         add_definitions(-DBIM_USE_OPENCV)
     endif()
 
@@ -493,7 +500,6 @@
         ${BIM_FMTS_API}/bim_histogram.cpp
         ${BIM_FMTS_API}/bim_metatags.cpp
         ${BIM_FMTS_API}/bim_image.cpp
-        ${BIM_FMTS_API}/bim_image_qt.cpp
         ${BIM_FMTS_API}/bim_image_filters.cpp
         ${BIM_FMTS_API}/bim_image_transforms.cpp
         ${BIM_FMTS_API}/bim_image_opencv.cpp
@@ -722,37 +728,6 @@
         #       mostly relevant for the pkg-config search path.
         target_link_libraries(bioimage Qt5::Core Qt5::Gui)
     endif()
-
-    # Install library and headers
-    export(TARGETS bioimage FILE cmake/bioimageTargets.cmake)
-    export(PACKAGE bioimage)
-
-    include(CMakePackageConfigHelpers)
-    write_basic_package_version_file(
-      cmake/bioimageConfigVersion.cmake
-      VERSION ${LIBBIOIMAGE_VERSION}
-      COMPATIBILITY AnyNewerVersion)
-
-    configure_package_config_file(
-      cmake/bioimageConfig.cmake.in
-      cmake/bioimageConfig.cmake
-      INSTALL_DESTINATION lib/cmake/)
-
-    install(TARGETS bioimage
-      EXPORT bioimageTargets
-      ARCHIVE DESTINATION lib
-      LIBRARY DESTINATION lib
-      RUNTIME DESTINATION bin
-      INCLUDES DESTINATION include)
-
-    install(FILES ${INSTALLHEADERS} DESTINATION include)
-
-    install(FILES
-      ${CMAKE_CURRENT_BINARY_DIR}/cmake/bioimageConfig.cmake
-      ${CMAKE_CURRENT_BINARY_DIR}/cmake/bioimageConfigVersion.cmake
-      DESTINATION lib/cmake/)
-
-    install(EXPORT bioimageTargets DESTINATION lib/cmake/)
 endif()
 
 
@@ -788,7 +763,7 @@
 
     internal_add_library(z "${BIC_INTERNAL_ZLIB_SOURCES}" "${BIC_INTERNAL_ZLIB_HEADERS}" "${BIC_INTERNAL_ZLIB_INSTALLHEADERS}" "${BIC_INTERNAL_ZLIB_LINK_LIBRARIES}")
 
-    set(ZLIB_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}z${CMAKE_LIBRARY_SUFFIX}")
+    set(ZLIB_LIBRARIES z)
 elseif(LIBBIOIMAGE)
     find_package(ZLIB ${BIC_ZLIB_REQUIRED_VERSION} REQUIRED)
     include_directories(${ZLIB_INCLUDE_DIRS})
@@ -812,7 +787,7 @@
 
     internal_add_library(bz2 "${BIC_INTERNAL_BZLIB_SOURCES}" "${BIC_INTERNAL_BZLIB_HEADERS}" "${BIC_INTERNAL_BZLIB_INSTALLHEADERS}" "${BIC_INTERNAL_BZLIB_LINK_LIBRARIES}")
 
-    set(BZIP2_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}bz2${CMAKE_LIBRARY_SUFFIX}")
+    set(BZIP2_LIBRARIES bz2)
 elseif(LIBBIOIMAGE)
     find_package(BZip2 REQUIRED)
     include_directories(${BZIP2_INCLUDE_DIR})
@@ -871,7 +846,7 @@
         target_compile_definitions(lcms2 PUBLIC _USRDLL CMS_DLL_BUILD)
     endif()
 
-    set(LCMS2_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}lcms2${CMAKE_LIBRARY_SUFFIX}")
+    set(LCMS2_LIBRARIES lcms2)
 elseif(LIBBIOIMAGE)
     find_package(LCMS2 ${BIC_LCMS2_REQUIRED_VERSION} REQUIRED)
     include_directories(${LCMS2_INCLUDE_DIR})
@@ -903,7 +878,7 @@
     internal_add_library(pole "${BIC_INTERNAL_POLE_SOURCES}" "${BIC_INTERNAL_POLE_HEADERS}" "${BIC_INTERNAL_POLE_INSTALLHEADERS}" "${BIC_INTERNAL_POLE_LINK_LIBRARIES}")
 
     # TODO FIXME: merge this linker command with the automatic system library detection below:
-    set(POLE_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}pole${CMAKE_LIBRARY_SUFFIX}")
+    set(POLE_LIBRARIES pole)
 elseif(LIBBIOIMAGE)
     message(FATAL_ERROR "Automatic detection of system pole library not implemented")
 endif()
@@ -923,7 +898,7 @@
         target_compile_definitions(jzon PUBLIC JZON_DLL)
     endif()
     
-    set(JZON_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}jzon${CMAKE_LIBRARY_SUFFIX}")
+    set(JZON_LIBRARIES jzon)
 elseif(LIBBIOIMAGE)
     message(FATAL_ERROR "Automatic detection of system jzon library not implemented")
 endif()
@@ -940,10 +915,10 @@
 
     internal_add_library(pugixml "${BIC_INTERNAL_PUGIXML_SOURCES}" "${BIC_INTERNAL_PUGIXML_HEADERS}" "${BIC_INTERNAL_PUGIXML_INSTALLHEADERS}" "${BIC_INTERNAL_PUGIXML_LINK_LIBRARIES}")
     if(MSVC AND BUILD_SHARED_LIBS)
-        target_compile_definitions(pugixml PUBLIC PUGIXML_API="__declspec(dllexport)")
+        target_compile_definitions(pugixml PUBLIC PUGIXML_API "__declspec(dllexport)")
     endif()
 
-    set(PUGIXML_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}pugixml${CMAKE_LIBRARY_SUFFIX}")
+    set(PUGIXML_LIBRARIES pugixml)
 elseif(LIBBIOIMAGE)
     message(FATAL_ERROR "Automatic detection of system pugixml library not implemented")
 endif()
@@ -981,7 +956,7 @@
 
         internal_add_library(nifti "${BIC_INTERNAL_NIFTI_SOURCES}" "${BIC_INTERNAL_NIFTI_HEADERS}" "${BIC_INTERNAL_NIFTI_INSTALLHEADERS}" "${BIC_INTERNAL_NIFTI_LINK_LIBRARIES}")
 
-        set(NIFTI_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}nifti${CMAKE_LIBRARY_SUFFIX}")
+        set(NIFTI_LIBRARIES nifti)
     elseif(LIBBIOIMAGE)
         find_package(NIFTI REQUIRED)
         include_directories(${NIFTI_INCLUDE_DIR})
@@ -1189,7 +1164,7 @@
         target_compile_definitions(openjpeg PUBLIC OPJ_EXPORTS)
     endif()
 
-    set(OPENJPEG_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}openjpeg${CMAKE_LIBRARY_SUFFIX}")
+    set(OPENJPEG_LIBRARIES openjpeg)
 elseif(LIBBIOIMAGE)
     message(FATAL_ERROR "Automatic detection of system openjpeg library not implemented")
 endif()
@@ -1219,7 +1194,7 @@
 
         internal_add_library(turbojpeg "${BIC_INTERNAL_LIBJPEG_TURBO_SOURCES}" "${BIC_INTERNAL_LIBJPEG_TURBO_HEADERS}" "${BIC_INTERNAL_LIBJPEG_TURBO_INSTALLHEADERS}" "${BIC_INTERNAL_LIBJPEG_TURBO_LINK_LIBRARIES}")
 
-        set(LibJpegTurbo_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}turbojpeg${CMAKE_LIBRARY_SUFFIX}")
+        set(LibJpegTurbo_LIBRARIES turbojpeg)
     elseif(LIBBIOIMAGE)
         find_package(LibJpegTurbo ${BIC_LIBJPEG_TURBO_REQUIRED_VERSION} REQUIRED)
         include_directories(${LibJpegTurbo_INCLUDE_DIRS})
@@ -1284,7 +1259,7 @@
 
         internal_add_library(jpeg "${BIC_INTERNAL_LIBJPEG_SOURCES}" "${BIC_INTERNAL_LIBJPEG_HEADERS}" "${BIC_INTERNAL_LIBJPEG_INSTALLHEADERS}" "${BIC_INTERNAL_LIBJPEG_LINK_LIBRARIES}")
 
-        set(JPEG_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}jpeg${CMAKE_LIBRARY_SUFFIX}")
+        set(JPEG_LIBRARIES jpeg)
     elseif(LIBBIOIMAGE)
         find_package(JPEG REQUIRED)
         include_directories(${JPEG_INCLUDE_DIR})
@@ -1343,7 +1318,7 @@
     endif()
 
     # TODO FIXME: merge this linker command with the automatic system library detection below:
-    set(LibRaw_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}raw${CMAKE_LIBRARY_SUFFIX}")
+    set(LibRaw_LIBRARIES raw)
 elseif(LIBBIOIMAGE)
     find_package(LibRaw ${BIC_LIBRAW_REQUIRED_VERSION} REQUIRED)
     include_directories(${LibRaw_INCLUDE_DIR})
@@ -1444,7 +1419,7 @@
     #set(BIC_INTERNAL_LIBTIFF_LINK_LIBRARIES ${BIC_INTERNAL_LIBTIFF_LINK_LIBRARIES} jpeg lzma ${ZLIB_LIBRARIES})
     internal_add_library(tiff "${BIC_INTERNAL_LIBTIFF_SOURCES}" "${BIC_INTERNAL_LIBTIFF_HEADERS}" "${BIC_INTERNAL_LIBTIFF_INSTALLHEADERS}" "${BIC_INTERNAL_LIBTIFF_LINK_LIBRARIES}")
 
-    set(TIFF_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}tiff${CMAKE_LIBRARY_SUFFIX}")
+    set(TIFF_LIBRARIES tiff)
 elseif(LIBBIOIMAGE OR BIC_INTERNAL_LIBGEOTIFF)
     find_package(TIFF ${BIC_LIBTIFF_REQUIRED_VERSION} REQUIRED)
     include_directories(${TIFF_INCLUDE_DIR})
@@ -1633,7 +1608,7 @@
 
     internal_add_library(proj "${BIC_INTERNAL_PROJ4_SOURCES}" "${BIC_INTERNAL_PROJ4_HEADERS}" "${BIC_INTERNAL_PROJ4_INSTALLHEADERS}" "${BIC_INTERNAL_PROJ4_LINK_LIBRARIES}")
 
-    set(PROJ4_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}proj${CMAKE_LIBRARY_SUFFIX}")
+    set(PROJ4_LIBRARIES proj)
 elseif(LIBBIOIMAGE OR BIC_INTERNAL_LIBGEOTIFF)
     find_package(PROJ4 ${BIC_PROJ4_REQUIRED_VERSION} REQUIRED)
 endif()
@@ -1706,7 +1681,7 @@
         add_dependencies(geotiff z)
     endif()
 
-    set(GEOTIFF_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}geotiff${CMAKE_LIBRARY_SUFFIX}")
+    set(GEOTIFF_LIBRARIES geotiff)
 elseif(LIBBIOIMAGE)
     find_package(GeoTIFF REQUIRED)
     include_directories(${GEOTIFF_INCLUDE_DIR})
@@ -1749,7 +1724,7 @@
 
     internal_add_library(png "${BIC_INTERNAL_PNG_SOURCES}" "${BIC_INTERNAL_PNG_HEADERS}" "${BIC_INTERNAL_PNG_INSTALLHEADERS}" "${BIC_INTERNAL_PNG_LINK_LIBRARIES}")
 
-    set(PNG_LIBRARY "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}png${CMAKE_LIBRARY_SUFFIX}")
+    set(PNG_LIBRARY png)
 elseif(LIBBIOIMAGE)
     find_package(PNG REQUIRED)
     if(NOT "${PNG_VERSION_STRING}" MATCHES "^1.[4-9]|^[2.9]")
@@ -1774,6 +1749,7 @@
     endif()
 endif()
 if(BIC_INTERNAL_EXIV2)
+    message("Using internal exiv2")
     include_directories(${BIM_LIB_EXIV2})
     include_directories(${BIM_LIB_EXIV2}/exiv2)
 
@@ -1916,9 +1892,9 @@
         ${BIM_LIB_EXIV2}/exiv2/utilsvideo.hpp)
 
     internal_add_library(exiv2 "${BIC_INTERNAL_EXIV2_SOURCES}" "${BIC_INTERNAL_EXIV2_HEADERS}" "${BIC_INTERNAL_EXIV2_INSTALLHEADERS}" "${BIC_INTERNAL_EXIV2_LINK_LIBRARIES}")
-    target_compile_definitions(exiv2 PUBLIC SUPPRESS_WARNINGS _FILE_OFFSET_BITS=64 EXV_BUILDING_LIB=1 DLL_EXPORT)
+    target_compile_definitions(exiv2 PUBLIC SUPPRESS_WARNINGS _FILE_OFFSET_BITS=64 EXV_BUILDING_LIB=1 PRIVATE DLL_EXPORT)
 
-    set(EXIV2_LIBRARIES "${LIBRARY_OUTPUT_DIRECTORY}/${CMAKE_LIBRARY_PREFIX}exiv2${CMAKE_LIBRARY_SUFFIX}")
+    set(EXIV2_LIBRARIES exiv2)
 elseif(LIBBIOIMAGE)
     find_package(Exiv2 ${BIC_EXIV2_REQUIRED_VERSION} REQUIRED)
     include_directories(${EXIV2_INCLUDE_DIR})
@@ -2114,6 +2090,44 @@
     # linking the library against its dependencies is not required
     # on all architectures, but it is required i.e. on Windows:
     target_link_libraries(bioimage ${LINK_LIBRARIES})
+
+    configure_file(bim_config.h.in ${CMAKE_CURRENT_BINARY_DIR}/bim_config.h)
+    # overwrite config.h with the configured one
+    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/bim_config.h DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
+
+
+
+    # Install library and headers
+    export(TARGETS bioimage FILE cmake/bioimageTargets.cmake)
+
+    include(CMakePackageConfigHelpers)
+    write_basic_package_version_file(
+      cmake/bioimageConfigVersion.cmake
+      VERSION ${LIBBIOIMAGE_VERSION}
+      COMPATIBILITY AnyNewerVersion)
+
+    configure_package_config_file(
+      cmake/bioimageConfig.cmake.in
+      cmake/bioimageConfig.cmake
+      INSTALL_DESTINATION cmake/)
+
+    install(TARGETS bioimage
+      EXPORT bioimageTargets
+      ARCHIVE DESTINATION lib
+      LIBRARY DESTINATION lib
+      RUNTIME DESTINATION bin
+      INCLUDES DESTINATION include)
+
+    install(FILES ${INSTALLHEADERS} DESTINATION include)
+
+    install(FILES
+      ${CMAKE_CURRENT_BINARY_DIR}/cmake/bioimageConfig.cmake
+      ${CMAKE_CURRENT_BINARY_DIR}/cmake/bioimageConfigVersion.cmake
+      DESTINATION cmake/)
+
+    install(EXPORT bioimageTargets DESTINATION cmake)
+
+
 endif()
 
 
diff -r 6a9599d65fa2 bim_config.h.in
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/bim_config.h.in	Thu Jun 07 13:51:07 2018 +1000
@@ -0,0 +1,5 @@
+#cmakedefine BIM_USE_OPENCV
+#cmakedefine BIM_USE_QT
+#cmakedefine BIM_USE_ITK
+#cmakedefine BIM_USE_EIGEN
+#cmakedefine BIM_USE_NUMPY
diff -r 6a9599d65fa2 libsrc/libbioimg/core_lib/bim_config.h
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/libsrc/libbioimg/core_lib/bim_config.h	Thu Jun 07 13:51:07 2018 +1000
@@ -0,0 +1,6 @@
+//#define BIM_USE_OPENCV
+//#define BIM_USE_QT
+//#define BIM_USE_ITK
+//#define BIM_USE_EIGEN
+//#define BIM_USE_OPENCV
+//#define BIM_USE_NUMPY
diff -r 6a9599d65fa2 libsrc/libbioimg/formats_api/bim_image.h
--- a/libsrc/libbioimg/formats_api/bim_image.h	Tue Jun 05 09:58:53 2018 +1000
+++ b/libsrc/libbioimg/formats_api/bim_image.h	Thu Jun 07 13:51:07 2018 +1000
@@ -45,6 +45,7 @@
 
 #include "tag_map.h"
 #include "xconf.h"
+#include "bim_config.h"
 
 #define BIM_USE_IMAGEMANAGER
 
